# Il primo set di tasks viene eseguito su tutti gli host, sia masters che workers.
#source : https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
- hosts: all
  # 'become: yes' permette di eseguire tutti i tasks come root.
  become: yes
  tasks:
    # Installa i pacchetti necessari per aggiungere nuovi repository APT via HTTPS.
    - name: Install prerequisites
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
        state: present
  
    # Aggiunge la chiave GPG del repository Docker all'elenco delle chiavi APT attendibili.
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    # Aggiunge il repository Docker ai repository APT.
    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    # Installa Docker dal repository Docker.
    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    # Aggiunge la chiave GPG del repository Kubernetes all'elenco delle chiavi APT attendibili.
    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    # Aggiunge il repository Kubernetes ai repository APT.
    - name: Add Kubernetes APT repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    # Installa i pacchetti Kubernetes dal repository Kubernetes.
    - name: Install Kubernetes
      apt:
        name: ['kubelet', 'kubeadm', 'kubectl']
        state: present
        update_cache: yes

    # Previene l'aggiornamento automatico dei pacchetti Kubernetes, che potrebbe causare problemi di compatibilit√†.
    - name: Hold Kubernetes packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop: ['kubelet', 'kubeadm', 'kubectl']

    
    # Mount the volume
    - name: Mount the volume
      mount:
        path: /mnt/volume
        src: /dev/sdb1
        fstype: ext4
        state: mounted

    # Enable ufw
    - name: Enable ufw
      ansible.builtin.apt:
        name: ufw
        state: present

    # Allow only SSH and Kubernetes necessary ports
    - name: Allow only SSH and Kubernetes necessary ports
      ansible.builtin.ufw:
        rule: allow
        name: "{{ item }}"
      loop:
        - 22
        - 6443
        - 2379:2380
        - 10250
        - 10251
        - 10252
        - 10255